cmake_minimum_required(VERSION 3.12)
project(QRasterizer VERSION 1.0 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 14)

find_package(SDL2 REQUIRED PATHS "${CMAKE_CURRENT_LIST_DIR}/External/SDL2")
find_package(SDL2_Image REQUIRED PATHS "${CMAKE_CURRENT_LIST_DIR}/External/SDL2_Image")

include_directories(${SDL2_INCLUDE_DIRS})
include_directories(${SDL2_IMG_INCLUDE_DIRS})
include_directories(Include) 

set(QRasterizer_SOURCES
    ${CMAKE_CURRENT_LIST_DIR}/Renderer/OBJParser.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Renderer/QRenderer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Renderer/IndexModel.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Renderer/Texture.cpp
    ${CMAKE_CURRENT_LIST_DIR}/Renderer/Rasterizer.cpp
    ${CMAKE_CURRENT_LIST_DIR}/SDL_Deleter.cpp
    ${CMAKE_CURRENT_LIST_DIR}/QApp.cpp)


# Copy Assets folder to build folder
add_executable(QRasterizer Main.cpp ${QRasterizer_SOURCES})

# Test folder
add_subdirectory(External/Catch2)
add_subdirectory(Test)


add_custom_command(TARGET QRasterizer POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${CMAKE_CURRENT_LIST_DIR}/../Assets
    $<TARGET_FILE_DIR:QRasterizer>/Assets)

add_custom_command(TARGET QRasterizer POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different  
        "${SDL2_LIB_DIRS}/SDL2.dll"                
        $<TARGET_FILE_DIR:QRasterizer>)            
target_link_libraries(QRasterizer ${SDL2_LIBRARIES})

# Load JPG files.
add_custom_command(TARGET QRasterizer POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${SDL2_IMG_LIB_DIRS}/SDL2_image.dll"            
        $<TARGET_FILE_DIR:QRasterizer>)        

add_custom_command(TARGET QRasterizer POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_if_different  
        "${SDL2_IMG_LIB_DIRS}/libjpeg-9.dll"                
        $<TARGET_FILE_DIR:QRasterizer>)            
target_link_libraries(QRasterizer ${SDL2_IMG_LIBRARIES})


